
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0/x86_64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This is the serial version of npudistml_npRmpi.R for comparison
> ## purposes (bandwidth ought to be identical, timing may
> ## differ). Study the differences between this file and its MPI
> ## counterpart for insight about your own problems.
> 
> library(np)
Nonparametric Kernel Methods for Mixed Datatypes (version 0.60-0)
[vignette("np_faq",package="np") provides answers to frequently asked questions]
> library(MASS)
> options(np.messages=FALSE)
> 
> ## Generate some data
> 
> set.seed(42)
> 
> require(MASS)
> 
> set.seed(42)
> 
> n <- 2500
> n.eval <- 25
> rho <- 0.95
> mu <- c(0,0)
> Sigma <- matrix(c(1,rho,rho,1),2,2)
> mydat <- mvrnorm(n=n, mu, Sigma)
> mydat <- data.frame(x=mydat[,1],y=mydat[,2])
> 
> q.minm <- 0.0
> q.max <- 1.0
> grid.seq <- seq(q.minm,q.max,length=n.eval)
> grid.dat <- cbind(grid.seq,grid.seq)
> 
> ## Estimate the copula
> 
> t.0 <- system.time(bw <- npudistbw(~x+y,data=mydat))
> t.1 <- system.time(copula <- npcopula(bws=bw,data=mydat,u=grid.dat))
> 
> t <- t.0+t.1
> 
> summary(bw)

Data (2500 observations, 2 variable(s)):

Bandwidth Selection Method: Least Squares Cross-Validation
Formula: ~x + y
Bandwidth Type: Fixed
Objective Function Value: 0.1655877 (achieved on multistart 2)

Var. Name: x Bandwidth: 0.0506581  Scale Factor: 0.6903571
Var. Name: y Bandwidth: 0.05222496 Scale Factor: 0.7158822

Continuous Kernel Type: Second-Order Gaussian
No. Continuous Vars.: 2

> 
> cat("Elapsed time =", t[3], "\n")
Elapsed time = 113.506 
> 
> proc.time()
   user  system elapsed 
112.790   0.974 113.756 
