
R version 2.11.0 (2010-04-22)
Copyright (C) 2010 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## This is the serial version of npconmode_npRmpi.R for comparison
> ## purposes (bandwidth ought to be identical, timing may
> ## differ). Study the differences between this file and its MPI
> ## counterpart for insight about your own problems.
> 
> library(np)
Loading required package: boot
Loading required package: cubature
Nonparametric Kernel Methods for Mixed Datatypes (version 0.40-3)
> options(np.messages=FALSE)
> 
> library(MASS)
> data(birthwt)
> 
> birthwt$low <- factor(birthwt$low)
> birthwt$smoke <- factor(birthwt$smoke)
> birthwt$race <- factor(birthwt$race)
> birthwt$ht <- factor(birthwt$ht)
> birthwt$ui <- factor(birthwt$ui)
> birthwt$ftv <- ordered(birthwt$ftv)
> 
> ## A conditional mode example
> 
> t <- system.time(bw <- npcdensbw(low~
+                                  smoke+ 
+                                  race+ 
+                                  ht+ 
+                                  ui+    
+                                  ftv+  
+                                  age+           
+                                  lwt,
+                                  data=birthwt))
> 
> summary(bw)

Conditional density data (189 observations, 8 variable(s))
(1 dependent variable(s), and 7 explanatory variable(s))

Bandwidth Selection Method: Maximum Likelihood Cross-Validation
Formula: low ~ smoke + race + ht + ui + ftv + age + lwt
Bandwidth Type: Fixed
Objective Function Value: 0.5675563 (achieved on multistart 3)

Exp. Var. Name: smoke Bandwidth: 0.4446024    Lambda Max: 0.5      
Exp. Var. Name: race  Bandwidth: 0.6666667    Lambda Max: 0.6666667
Exp. Var. Name: ht    Bandwidth: 0.02522040   Lambda Max: 0.5      
Exp. Var. Name: ui    Bandwidth: 0.04118838   Lambda Max: 0.5      
Exp. Var. Name: ftv   Bandwidth: 0.72146      Lambda Max: 1        
Exp. Var. Name: age   Bandwidth: 5.486306   Scale Factor: 2.532781 
Exp. Var. Name: lwt   Bandwidth: 5.445919   Scale Factor: 0.5866317 

Dep. Var. Name: low   Bandwidth: 0.03365099   Lambda Max: 0.5

Continuous Kernel Type: Second-Order Gaussian
No. Continuous Explanatory Vars.: 2

Unordered Categorical Kernel Type: Aitchison and Aitken
No. Unordered Categorical Explanatory Vars.: 4
No. Unordered Categorical Dependent Vars.: 1

Ordered Categorical Kernel Type: Wang and Van Ryzin
No. Ordered Categorical Explanatory Vars.: 1

> 
> t <- t + system.time(model <- npconmode(bws=bw))
> 
> summary(model)

Conditional Mode data: 189 training points, in 8 variable(s)
(1 dependent variable(s), and 7 explanatory variable(s))

                               low
Dep. Var. Bandwidth(s): 0.03365099
                            smoke      race         ht         ui     ftv
Exp. Var. Bandwidth(s): 0.4446024 0.6666667 0.02522040 0.04118838 0.72146
                             age      lwt
Exp. Var. Bandwidth(s): 5.486306 5.445919

Bandwidth Type: Fixed

Confusion Matrix
      Predicted
Actual   0   1
     0 127   3
     1  27  32

Overall Correct Classification Ratio:  0.8412698
Correct Classification Ratio By Outcome:
        0         1 
0.9769231 0.5423729 

McFadden-Puig-Kerschner performance measure:  0.8206097

Continuous Kernel Type: Second-Order Gaussian
No. Continuous Explanatory Vars.: 2

Unordered Categorical Kernel Type: Aitchison and Aitken
No. Unordered Categorical Explanatory Vars.: 4
No. Unordered Categorical Dependent Vars.: 1

Ordered Categorical Kernel Type: Wang and Van Ryzin
No. Ordered Categorical Explanatory Vars.: 1

> 
> cat("Elapsed time =", t[3], "\n")
Elapsed time = 85.924 
> 
> proc.time()
   user  system elapsed 
 86.457   0.057  86.524 
